// <auto-generated />
using System;
using BoardgameShopASPNET.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BoardgameShop.WEBUI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.AccountUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Account");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("RoleAccountId")
                        .HasColumnType("int");

                    b.Property<int>("RoleAccount_ID")
                        .HasColumnType("int")
                        .HasColumnName("RoleAccount_ID");

                    b.HasKey("Id")
                        .HasName("PK__Account___213379EB762731C6");

                    b.HasIndex("RoleAccountId");

                    b.HasIndex("RoleAccount_ID");

                    b.ToTable("Account_user", (string)null);
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Admin");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Admins__69F567663528856B");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.AttributeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_AttributeType");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AttributeTypeName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Attribut__FE87E99414C78373");

                    b.ToTable("AttributeTypes");
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.AttributeValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_ValueAttribure");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AttributeTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AttributeType_ID");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Attribut__8303888C2DA86DB6");

                    b.HasIndex("AttributeTypeId");

                    b.ToTable("AttributeValues");
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Cart");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_ID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_ID");

                    b.HasKey("Id")
                        .HasName("PK__Carts__72140ECFA4D762E0");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.CartPhoto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_CartPhoto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PhotoId")
                        .HasColumnType("int")
                        .HasColumnName("Photo_ID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_ID");

                    b.HasKey("Id")
                        .HasName("PK__CartPhot__D1E8BD53B765CE24");

                    b.HasIndex("PhotoId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartPhoto", (string)null);
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.Favorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Favorite");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_ID");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_ID");

                    b.HasKey("Id")
                        .HasName("PK__Favorite__FA228CCFEF1766AF");

                    b.HasIndex("ProductId");

                    b.HasIndex(new[] { "UserId", "ProductId" }, "UQ_User_Product")
                        .IsUnique();

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Photo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LinkValue")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("PK__Photo__DA88631125D6A82C");

                    b.ToTable("Photo", (string)null);
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Product");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("Category_ID");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .HasName("PK__Products__522DE4968F8FE3C1");

                    b.HasIndex("CategoryId");

                    b.HasIndex(new[] { "ProductName" }, "UQ__Products__DD5A978A62F75821")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.ProductAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Attribute");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("Product_ID");

                    b.Property<int?>("ValueAttributeId")
                        .HasColumnType("int")
                        .HasColumnName("ValueAttribute_ID");

                    b.HasKey("Id")
                        .HasName("PK__ProductA__9D1EB8026E7A27E8");

                    b.HasIndex("ProductId");

                    b.HasIndex("ValueAttributeId");

                    b.ToTable("ProductAttributes");
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Category");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__ProductC__6DB3A68AD8FF7755");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.RoleAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_RoleAccount");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("RoleAccount");

                    b.HasKey("Id")
                        .HasName("PK__RoleAccount");

                    b.ToTable("RoleAccount", (string)null);
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_User");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int")
                        .HasColumnName("Account_ID");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Users__ED4DE442366EF2E8");

                    b.HasIndex("AccountId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.AccountUser", b =>
                {
                    b.HasOne("BoardgameShop.WEBUI.Models.DbEntities.Classes.RoleAccount", null)
                        .WithMany("AccountUsers")
                        .HasForeignKey("RoleAccountId");

                    b.HasOne("BoardgameShop.WEBUI.Models.DbEntities.Classes.RoleAccount", "RoleAccount")
                        .WithMany()
                        .HasForeignKey("RoleAccount_ID")
                        .IsRequired();

                    b.Navigation("RoleAccount");
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.AttributeValue", b =>
                {
                    b.HasOne("BoardgameShop.WEBUI.Models.DbEntities.Classes.AttributeType", "AttributeType")
                        .WithMany("AttributeValues")
                        .HasForeignKey("AttributeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Attribute__Attri__3C34F16F");

                    b.Navigation("AttributeType");
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.Cart", b =>
                {
                    b.HasOne("BoardgameShop.WEBUI.Models.DbEntities.Classes.Product", "Product")
                        .WithMany("Carts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Carts__Product_I__245D67DE");

                    b.HasOne("BoardgameShop.WEBUI.Models.DbEntities.Classes.User", "User")
                        .WithMany("Carts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Carts__User_ID__236943A5");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.CartPhoto", b =>
                {
                    b.HasOne("BoardgameShop.WEBUI.Models.DbEntities.Classes.Photo", "Photo")
                        .WithMany("CartPhotos")
                        .HasForeignKey("PhotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__CartPhoto__Photo__45BE5BA9");

                    b.HasOne("BoardgameShop.WEBUI.Models.DbEntities.Classes.Product", "Product")
                        .WithMany("CartPhotos")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__CartPhoto__Produ__44CA3770");

                    b.Navigation("Photo");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.Favorite", b =>
                {
                    b.HasOne("BoardgameShop.WEBUI.Models.DbEntities.Classes.Product", "Product")
                        .WithMany("Favorites")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Favorites__Produ__208CD6FA");

                    b.HasOne("BoardgameShop.WEBUI.Models.DbEntities.Classes.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Favorites__User___1F98B2C1");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.Product", b =>
                {
                    b.HasOne("BoardgameShop.WEBUI.Models.DbEntities.Classes.ProductCategory", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Products__Catego__1BC821DD");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.ProductAttribute", b =>
                {
                    b.HasOne("BoardgameShop.WEBUI.Models.DbEntities.Classes.Product", "Product")
                        .WithMany("ProductAttributes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__ProductAt__Produ__40058253");

                    b.HasOne("BoardgameShop.WEBUI.Models.DbEntities.Classes.AttributeValue", "ValueAttribute")
                        .WithMany("ProductAttributes")
                        .HasForeignKey("ValueAttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__ProductAt__Value__40F9A68C");

                    b.Navigation("Product");

                    b.Navigation("ValueAttribute");
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.User", b =>
                {
                    b.HasOne("BoardgameShop.WEBUI.Models.DbEntities.AccountUser", "Account")
                        .WithMany("Users")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__Users__Account_I__412EB0B6");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.AccountUser", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.AttributeType", b =>
                {
                    b.Navigation("AttributeValues");
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.AttributeValue", b =>
                {
                    b.Navigation("ProductAttributes");
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.Photo", b =>
                {
                    b.Navigation("CartPhotos");
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.Product", b =>
                {
                    b.Navigation("CartPhotos");

                    b.Navigation("Carts");

                    b.Navigation("Favorites");

                    b.Navigation("ProductAttributes");
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.RoleAccount", b =>
                {
                    b.Navigation("AccountUsers");
                });

            modelBuilder.Entity("BoardgameShop.WEBUI.Models.DbEntities.Classes.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Favorites");
                });
#pragma warning restore 612, 618
        }
    }
}
